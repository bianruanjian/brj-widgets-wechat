<style lang='less'>
  @import '../../common/assets/style/packages/form.wxss';
  @import '../../vendor/bootstrap/input-group.wxss'; 
  @import '../../common/assets/style/packages/form.wxss';
  @import '../../common/assets/style/packages/input-group.wxss';

</style>

<template>
  <view class="{{!label ? 'form-group-simple' :labelPosition != 'top' ? 'form-group row' : 'form-group'}}">
    <block wx:if='{{label}}'>
      <view wx:if="{{labelPosition == 'top'}}" class='form-label-top'>
        <db-label :forId='widgetId' :value='label'></db-label>
      </view>
      <db-label wx:else :forId='widgetId' :value='label'></db-label>
    </block>
    <view class='{{cssClasses}}' style='{{cssStyles}}' id='{{widgetId}}'>
      <slot></slot>
    </view>
  </view>
</template>

<script>
  import BaseMixin from '../../mixins/base'
  import SpacingMixin from '../../mixins/spacing'
  import FloatMixin from '../../mixins/float'
  import FlexMixin from '../../mixins/flex'
  import BaseComponent from '../baseComponent'
  import DbLabel from '../label/index'
  const sizeMap = {
    'small': 'sm',
    'large': 'lg'
  }
  export default class InputGroup extends BaseComponent {
    mixins = [BaseMixin, SpacingMixin, FloatMixin, FlexMixin.item]
    components = {
      'db-label': DbLabel
    }
    props = this.mixinProps({
      label: {
        type: String,
        value: ''
      },
      labelPosition: {
        type: String,
        value: 'left'
      },
      size: {
        type: String,
        value: ''
      }
    })
    getCssClasses() {
      let cssClasses = ['input-group', this._getSize()]
      return cssClasses.join(' ').trim()
    }
    _getSize() {
      let size = ''
      if (this.data.size) {
        size = sizeMap[this.data.size]
        size = size ? 'input-group-' + size : 'input-group-' + this.data.size
      }
      return size
    }
  }
</script>
