<style lang='less'>

</style>

<template>
  <picker value="{{value}}" range="{{options}}" id='{{widgetId}}' class='{{cssClasses}}' style='{{cssStyles}}' disabled='{{disabled}}'>
    <slot></slot>
    {{options[value]}}
  </picker>
</template>

<script>
  import BaseMixin from '../../mixins/base'
  import SpacingMixin from '../../mixins/spacing'
  import FlexMixin from '../../mixins/flex'
  import FloatMixin from '../../mixins/float'
  import BaseComponent from '../baseComponent'
  export default class Select extends BaseComponent {
    mixins = [BaseMixin, SpacingMixin, FlexMixin.item, FloatMixin]
    props = this.mixinProps({
      name: {
        type: String,
        value: ''
      },
      password: {
        type: Boolean | String,
        value: false
      },
      value: {
        type: String,
        value: ''
      },
      label: {
        type: String,
        value: ''
      },
      required: {
        type: Boolean | String,
        value: false
      },
      disabled: {
        type: Boolean | String,
        value: false
      },
      readOnly: {
        type: Boolean | String,
        value: false
      },
      size: {
        type: String,
        value: ''
      },
      focus: {
        type: Boolean | String,
        value: false
      },
      plainText: {
        type: Boolean | String,
        value: false
      },
      options: {
        type: String | Array,
        value: ''
      },
      labelField: {
        type: String,
        value: ''
      },
      valueField: {
        type: String,
        value: ''
      },
      dataPath: {
        type: String,
        value: ''
      },
      invalidMessage: {
        type: String,
        value: ''
      },
      validMessage: {
        type: String,
        value: ''
      }
    })
    getCssClasses() {
      let cssClasses = [this._getPlaintext(), this._getSize()]
      cssClasses = cssClasses.filter(function(item, index, array) {
        return item !== ''
      })
      return cssClasses.join(' ').trim()
    }
    _getPlaintext() {
      if (this.data.plainText === true || this.data.plainText === 'true') {
        return 'form-control-plaintext'
      }
      return 'form-control'
    }
    _getSize() {
      let sizeMap = {
        small: 'sm',
        large: 'lg'
      }
      if (this.data.size && sizeMap[this.data.size]) {
        return 'form-control-' + sizeMap[this.data.size]
      }
      return ''
    }
  }
</script>
