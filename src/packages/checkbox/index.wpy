<style lang='less'>
  @import '../../common/assets/style/packages/form.wxss';
  .form-check-input {
    margin-top: 0rem;
    margin-left:-0.75rem;
  }

  .form-check-label {
    margin-right: 0.75em;
  }

  .form-check-label-after {
    margin-left: 0.16rem;
  }

  .form-check, .form-check-inline{
     padding-left:0.75rem;
  }

  .form-label-fluid{
    padding-left:0.4rem;
  }

  .form-check .form-check-input {
    position:static;
  }
</style>

<template>
  <view class="{{fluid ? 'form-check' : 'form-check-inline'}}">
    <label wx:if="{{labelAfter != null && labelAfter != 'true' && labelAfter != true}}" for='{{widgetId}}' class="{{fluid ? 'form-label-fluid' : ''}} form-check-label">{{label}}</label>
    <checkbox id='{{widgetId}}' name='{{name}}' value="{{name}}" checked="{{checked}}" class='{{cssClasses}}' style='{{cssStyles}}' readonly='{{readOnly}}' disabled='{{disabled}}' />
    <label wx:if="{{labelAfter == null || labelAfter =='true' || labelAfter == true}}" for='{{widgetId}}' class="{{fluid ? 'form-label-fluid' : ''}} form-check-label-after">{{label}}</label>
  </view>
</template>

<script>
  import BaseMixin from '../../mixins/base'
  import SpacingMixin from '../../mixins/spacing'
  import FlexMixin from '../../mixins/flex'
  import FloatMixin from '../../mixins/float'
  import BaseComponent from '../baseComponent'
  const sizeMap = {
    small: 'sm',
    large: 'lg'
  }
  export default class Checkbox extends BaseComponent {
    mixins = [BaseMixin, SpacingMixin, FlexMixin.item, FloatMixin]
    props = this.mixinProps({
      name: {
        type: String,
        value: ''
      },
      type: {
        type: String,
        value: ''
      },
      value: {
        type: String,
        value: ''
      },
      checked: {
        type: Boolean | String,
        value: false
      },
      label: {
        type: String,
        value: ''
      },
      labelAfter: {
        type: Boolean | String,
        value: true
      },
      required: {
        type: Boolean | String,
        value: false
      },
      disabled: {
        type: Boolean | String,
        value: false
      },
      readOnly: {
        type: Boolean | String,
        value: false
      },
      fluid: {
        type: Boolean | String,
        value: false
      },
      size: {
        type: String,
        value: ''
      },
      invalidMessage: {
        type: String,
        value: ''
      },
      validMessage: {
        type: String,
        value: ''
      }
    })
    getCssClasses() {
      let cssClasses = ['form-check-input', this._getSize()]
      cssClasses = cssClasses.filter(function(item, index, array) {
        return item !== ''
      })
      return cssClasses.join(' ').trim()
    }
    _getSize() {
      if (this.data.size && sizeMap[this.data.size]) {
        return 'form-control-' + sizeMap[this.data.size]
      }
      return ''
    }
  }
</script>
