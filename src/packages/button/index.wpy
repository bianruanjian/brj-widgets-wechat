<style>
  @import '../../vendor/bootstrap/button.wxss';
  @import '../../common/assets/style/packages/button.wxss';
  
  .btn-outline {
    border-width: 1px;
    border-style: solid;
  }

</style>

<template>
  <button id="{{widgetId}}" class="{{cssClasses}}" style="{{cssStyles}}" disabled="{{disabled}}">
    <slot></slot>
    {{value ? value : ''}}
  </button>
</template>

<script>
  import BaseMixin from '../../mixins/base'
  import BaseComponent from '../baseComponent'
  const sizeMap = {
    small: 'sm',
    large: 'lg'
  }
  export default class Button extends BaseComponent {
    mixins = [BaseMixin]
    props = this.mixinProps({
      value: {
        type: String,
        value: '按钮'
      },
      appearance: {
        type: String,
        value: ''
      },
      size: {
        type: String,
        value: ''
      },
      disabled: {
        type: Boolean | String,
        value: false
      },
      type: {
        type: String,
        value: ''
      },
      fluid: {
        type: Boolean | String,
        value: false
      },
      active: {
        type: Boolean | String,
        value: false
      },
      href: {
        type: String,
        value: ''
      },
      target: {
        type: String,
        value: 'self'
      }
    })
    getCssClasses() {
      let cssClasses = [this._getAppearance(), this._getSize(), this._getFluid(), this._getActive()]
      cssClasses = cssClasses.filter(function(item, index, array) {
        return item !== ''
      })
      return cssClasses.join(' ').trim()
    }
    _getAppearance() {
      let appearanceClasses = []
      let appearance = this.data.appearance
      if (appearance) {
        if (appearance.indexOf('outline') > -1) {
          appearanceClasses.push('btn-outline')
        }
        appearanceClasses.push('btn btn-' + appearance)
      }
      return appearanceClasses.join(' ').trim()
    }
    _getSize() {
      if (this.data.size && sizeMap[this.data.size]) {
        return 'btn-' + sizeMap[this.data.size]
      }
      return ''
    }
    _getFluid() {
      return this.data.fluid ? 'btn-block' : ''
    }
    _getActive() {
      return this.data.active ? 'active' : ''
    }
  }
</script>
